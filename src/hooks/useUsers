import { useDispatch, useSelector } from "react-redux";
import useDispatchedAction from "./useDispatchedAction";
import { fetchUsersFailure } from "../redux/UserReducer/action";

const useUsers = () => {
  const usersData = useSelector((store) => store.user);

  const handleFetchUsersRequest = () => useDispatchedAction(fetchUsersRequest);
  const handleFetchUsersSuccess = () => useDispatchedAction(fetchUsersSuccess);
  const handleFetchUsersFailure = () => useDispatchedAction(fetchUsersFailure);

  useEffect(() => {
    handleFetchUsersRequest();

    fetch("https://jsonplaceholder.typicode.com/users")
      .then((response) => {
        if (response.ok) return response.json();
        throw new Error("error when users fetching ");
      })
      .then((data) => {
        const mappedData = data.slice(0, 6);
        handleFetchUsersSuccess(mappedData);
      })
      .catch((error) => {
        handleFetchUsersFailure(error.message);
      });
  }, [dispatch]);

  return { usersData };
};

export default useUsers;
